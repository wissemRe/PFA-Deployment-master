# Generated by Django 3.2.3 on 2021-05-28 21:38

import django.core.validators
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):
    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Device',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=30, unique=True)),
                ('enabled', models.BooleanField(default=False)),
                ('user', models.ForeignKey(default=None, on_delete=django.db.models.deletion.SET_DEFAULT,
                                           to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Sensor',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('measure', models.CharField(
                    choices=[('TEMPERATURE', 'Temperature'), ('HUMIDITY', 'Humidity'), ('PRESSION', 'Pression'),
                             ('WIND', 'Wind')], max_length=15)),
                ('type', models.CharField(choices=[('DHT11', 'DHT11'), ('DHT22', 'DHT22')], max_length=5)),
                ('name', models.CharField(blank=True, max_length=30, unique=True)),
                ('enabled', models.BooleanField(default=False)),
                ('Board', models.ForeignKey(blank=True, default=None, on_delete=django.db.models.deletion.SET_DEFAULT,
                                            related_name='+', to='application.device')),
            ],
        ),
        migrations.CreateModel(
            name='SensorSetting',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=30, null=True, unique=True)),
                ('measurement_type', models.CharField(
                    choices=[('%', '%'), ('F', 'Fahrenheit'), ('Â°C', 'Celsius'), ('Pa', 'Pascal'), ('Bar', 'Bar'),
                             ('KmH', 'Km/h'), ('Mh', 'Miles/h')], max_length=3)),
            ],
        ),
        migrations.CreateModel(
            name='SensorReading',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('timestamp', models.DateTimeField(default=django.utils.timezone.now)),
                ('value', models.IntegerField(validators=[django.core.validators.MinValueValidator(-150),
                                                          django.core.validators.MaxValueValidator(150)])),
                ('sensor', models.ForeignKey(blank=True, default=None, on_delete=django.db.models.deletion.CASCADE,
                                             related_name='+', to='application.sensor')),
            ],
        ),
        migrations.AddField(
            model_name='sensor',
            name='SensorSetting',
            field=models.ForeignKey(blank=True, default=None, on_delete=django.db.models.deletion.SET_DEFAULT,
                                    related_name='+', to='application.sensorsetting'),
        ),
        migrations.CreateModel(
            name='EmailAlert',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('timestamp', models.DateTimeField(default=django.utils.timezone.now)),
                ('subject', models.CharField(blank=True, default='', max_length=150)),
                ('recipient', models.EmailField(max_length=254)),
                ('min_value', models.IntegerField(blank=True, default=0, null=True,
                                                  validators=[django.core.validators.MinValueValidator(-150),
                                                              django.core.validators.MaxValueValidator(150)])),
                ('max_value', models.IntegerField(blank=True, default=0, null=True,
                                                  validators=[django.core.validators.MinValueValidator(-150),
                                                              django.core.validators.MaxValueValidator(150)])),
                ('board',
                 models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.CASCADE,
                                   to='application.device')),
                ('sensor',
                 models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.CASCADE,
                                   to='application.sensor')),
                ('user', models.ForeignKey(default=None, on_delete=django.db.models.deletion.CASCADE,
                                           to=settings.AUTH_USER_MODEL)),
            ],
        ),
    ]
